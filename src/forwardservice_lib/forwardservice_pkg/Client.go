/*
 * forwardservice_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package ForwardServiceClient

import(
	"forwardservice_lib/configuration_pkg"
	"forwardservice_lib/shops_pkg"
	"forwardservice_lib/products_pkg"
	"forwardservice_lib/category_pkg"
	"forwardservice_lib/tiki_pkg"
	"forwardservice_lib/lazada_pkg"
)
/*
 * Client structure as interface implementation
 */
type FORWARDSERVICE_IMPL struct {
     shops shops_pkg.SHOPS
     products products_pkg.PRODUCTS
     category category_pkg.CATEGORY
     tiki tiki_pkg.TIKI
     lazada lazada_pkg.LAZADA
     config  configuration_pkg.CONFIGURATION
}

/**
     * Access to Configuration
     * @return Returns the Configuration instance
*/
func (me *FORWARDSERVICE_IMPL) Configuration() configuration_pkg.CONFIGURATION {
    return me.config
}
/**
     * Access to Shops controller
     * @return Returns the Shops() instance
*/
func (me *FORWARDSERVICE_IMPL) Shops() shops_pkg.SHOPS {
    if(me.shops) == nil {
        me.shops = shops_pkg.NewSHOPS(me.config)
    }
    return me.shops
}
/**
     * Access to Products controller
     * @return Returns the Products() instance
*/
func (me *FORWARDSERVICE_IMPL) Products() products_pkg.PRODUCTS {
    if(me.products) == nil {
        me.products = products_pkg.NewPRODUCTS(me.config)
    }
    return me.products
}
/**
     * Access to Category controller
     * @return Returns the Category() instance
*/
func (me *FORWARDSERVICE_IMPL) Category() category_pkg.CATEGORY {
    if(me.category) == nil {
        me.category = category_pkg.NewCATEGORY(me.config)
    }
    return me.category
}
/**
     * Access to Tiki controller
     * @return Returns the Tiki() instance
*/
func (me *FORWARDSERVICE_IMPL) Tiki() tiki_pkg.TIKI {
    if(me.tiki) == nil {
        me.tiki = tiki_pkg.NewTIKI(me.config)
    }
    return me.tiki
}
/**
     * Access to Lazada controller
     * @return Returns the Lazada() instance
*/
func (me *FORWARDSERVICE_IMPL) Lazada() lazada_pkg.LAZADA {
    if(me.lazada) == nil {
        me.lazada = lazada_pkg.NewLAZADA(me.config)
    }
    return me.lazada
}

